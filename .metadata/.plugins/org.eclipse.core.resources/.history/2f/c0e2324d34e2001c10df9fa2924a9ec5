package ajdbc.dept;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;


public class LoginView extends JFrame implements ActionListener {
	// 생성자
	JPanel jp_center = new JPanel();
	JTextField jtf_id = new JTextField("", 10);
	JTextField jtf_pw = new JTextField("", 10);
	JPanel jp_east = new JPanel();
	JButton jbtn_login = new JButton("로그인");

	LoginView() {
		jbtn_login.addActionListener(this);
		initDisplay();
	}

	public void initDisplay() {
		jp_center.setBackground(Color.orange);
		jp_center.setLayout(new GridLayout(2, 1));
		jp_center.add(jtf_id);
		jp_center.add(jtf_pw);
		jp_east.setBackground(Color.green);
		jp_east.setLayout(new BorderLayout());
		jp_east.add("Center", jbtn_login);
		this.setTitle("토마토톡 로그인");
		this.setSize(250, 100);
		this.add("Center", jp_center);
		this.add("East", jp_east);
		this.setVisible(true);
	}

	public String login(String mem_id, String mem_pw) {
		String mem_name = null;
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		int result = 1;
		StringBuilder sql = new StringBuilder();

		sql.append(" SELECT                                     ");
		sql.append(" result                                    ");
		sql.append(" FROM (                                   ");
		sql.append("      SELECT                             ");
		sql.append("      CASE WHEN mem_id=? THEN            ");
		sql.append("      CASE WHEN mem_pw=? THEN mem_name   ");
		sql.append("                  ELSE '0'               ");
		sql.append("       END                               ");
		sql.append("      ELSE '-1'                          ");
		sql.append("      END as result                      ");
		sql.append("    FROM member                          ");
		sql.append("    ORDER BY result desc                 ");
		sql.append("     )                                   ");
		sql.append("  WHERE rownum =1                            ");
		sql.append("                                         ");
		sql.append("                                         ");
		DBConnectionMgr dbMgr = new DBConnectionMgr();
		try {
			con = dbMgr.getConnection();
			// ? 자리에 들어갈 아이디를 설정해야 함
			pstmt = con.prepareStatement(sql.toString());
			pstmt.setString(1, mem_id);
			// select처리시는 executeQuery()호출
			// insert,update,delete 처리시는 executeUpdate()호출
			rs = pstmt.executeQuery();
			if (rs.next()) {
				result = rs.getInt(1);
			}
			System.out.println("result : " + result); // 0또는 1
		} catch (Exception e) {
			System.out.println(e.toString());
		}
		return mem_name;
	}

	public static void main(String[] args) {
		new LoginView();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Object obj = e.getSource();
		if (obj == jbtn_login) {
			System.out.println("로그인 호출 성공"); // 출력된다면 이벤트처리 성공한것.
			String user_id = jtf_id.getText();
			String user_pw = jtf_pw.getText();
			String result = "";
			LoginDao loginDao = new LoginDao();
			result = loginDao.login(user_id, user_pw);
			System.out.println("result : " + result);

		}
	}

}
