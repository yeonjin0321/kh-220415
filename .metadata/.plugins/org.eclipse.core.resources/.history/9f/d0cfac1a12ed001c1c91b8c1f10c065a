package ajdbc.member;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import address.view2.DBConnectionMgr;

// JFrame jf = new JFrame();
// jf.setTitle("자바실습");

// JFrame jf = new JFrame("자바실습");

public class MemberApp extends JFrame implements ActionListener, MouseListener {
	JPanel 		jp_north 	= new JPanel();// 디폴트레이아웃:FlowLayout 속지.
	JButton 	jbtn_sel 	= new JButton("조회");
	JButton 	jbtn_ins 	= new JButton("입력");
	JButton 	jbtn_upd 	= new JButton("수정");
	JButton 	jbtn_del 	= new JButton("삭제");

	String cols[] = {"번호","이름","아이디","주소"}; //jtable에 들어갈 1차 배열 선언.
	String data[][] = new String[3][4]; //[0][0]/[3][4]로 치환해서 이해해보기.
	DefaultTableModel dtm = new DefaultTableModel(data,cols); // 생성자의 파라미터를 이용하여 코드량을 줄임.
	JTable jtb = new JTable(dtm);
	Font font = new Font("돋움체",Font.BOLD,18); // 글씨체 처리
	JScrollPane jsp = new JScrollPane(jtb); //jtable을 스크롤에 넣는다.
	DBConnectionMgr dbMgr = new 	DBConnectionMgr ();
	Connection con = null;
	PreparedStatement pstmt = null;
	ResultSet rs =null;
	
	public  MemberApp () {
		jbtn_sel.addActionListener(this);
		
		initDisplay();
	}
	public void refreshData() {
		
		List<Map<String,Object>> memList = new ArrayList<>(); //리스트는 순서가 있다. 느리다 <=> 맵은 랜덤이고 빠르게 담는다.
		StringBuilder sql = new StringBuilder();
		sql.append("	select mem_no,mem_id,mem_pw     ");
		sql.append("    ,mem_name,mem_zipcode,mem_address ");
		sql.append("    FROM member                     ");
		sql.append("    ORDER BY mem_no desc             ");
		try {
			con = dbMgr.getConnection();
			pstmt = con.prepareStatement(sql.toString());
			pstmt.setString(1, user_id); //user_id 받아오기
			rs = pstmt.executeQuery();
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			DBConnectionMgr.freeConnection(rs, pstmt, con); //생성된 역순. 반대로 반납해줘야함.
		}

	
	}
	
	public void initDisplay() {
		jp_north.setLayout(new FlowLayout(FlowLayout.CENTER)); // 외우기!! 북쪽 속지에 붙이고 위치수정
		jbtn_sel.setBackground(new Color(159,9,9));
		jbtn_sel.setForeground(new Color(212,212,212));
		jp_north.add(jbtn_sel);
		jbtn_ins.setBackground(new Color(7,84,170));
		jbtn_ins.setForeground(new Color(212,212,212));
		jp_north.add(jbtn_ins);
		jbtn_upd.setBackground(new Color(19,99,57));
		jbtn_upd.setForeground(new Color(212,212,212));
		jp_north.add(jbtn_upd);
		jbtn_del.setBackground(new Color(54,54,54));
		jbtn_del.setForeground(new Color(212,212,212));
		jp_north.add(jbtn_del);
		
		this.add("North", jp_north); //화면 북쪽에 붙이는거
		this.add("Center",jsp);
		this.setTitle("회원관리시스템 Ver1.0");
		this.setSize(600, 400);
		this.setVisible(true);
	}
	
	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub

	}

	public static void main(String[] args) {
			new MemberApp();
	}

}