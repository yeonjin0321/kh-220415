package ajdbc.crud;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import address.view2.DBConnectionMgr; //db커넥션 //vo
import oracle.vo.DeptVO;

// 단일 상속의 단점을 보완하기 위해서 인터페이스를 제공하고 있다.
// 인터페이스는 다중 처리 가능하다
public class CRUDDept2 extends JFrame implements ActionListener, MouseListener {
	// 선언부
	DBConnectionMgr dbMgr = new DBConnectionMgr();
	Connection con = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	// db연동

	public CRUDDept2() {

	}

	/*******************************************************************
	 * 부서 등록 구현 VO(Value Object) - 오라클 타입과 자바타입비교 - 컬럼명과 VO전변과 Map의 키값은 반드시 일치해야 한다.
	 * 
	 * @param pdVO - 사용자가 입력한 부서번호, 부서명, 지역을 받는다 - 복합데이터 클래스
	 * @return int - 1:등록 성공 0: 등록 실패 INSERT INTO dept(deptno, dname, loc)
	 *         VALUES(71,'개발1팀','서귀포')
	 *******************************************************************/
	public int deptInsert(DeptVO pdVO) {
		System.out.println("입력 호출 성공");
		int result = 0;
		StringBuilder sql = new StringBuilder();
		sql.append("INSERT INTO dept(deptno, dname, loc");
		sql.append(" VALUES(?,?,?)");
		// 예외처리 해주기
		try {
			con = dbMgr.getConnection();
			pstmt = con.prepareStatement(sql.toString());

			int i = 0;
			pstmt.setInt(++i, pdVO.getDeptno());
			pstmt.setString(++i, pdVO.getDname());
			pstmt.setString(++i, pdVO.getLoc());

			result = pstmt.executeUpdate(); // 오라클 입력 처리를 성공 하였을때 1을 돌려 받는다.

			if (result == 1) {
				deptSelectAll(); // - 입력성공후에 초기화 시키는것
				SetDeptno(0);
				setDname("");
				setLoc("");
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnectionMgr.freeConnection(pstmt, con);
		}
		return result;
	}

	/*******************************************************************
	 * 부서 수정 구현
	 * 
	 * @param pdVO - 사용자가 입력한 부서번호, 부서명, 지역을 받는다 - 복합데이터 클래스
	 * @return int - 1:등록 성공 0: 등록 실패 UPDATE dept SET dname = '개발2팀' ,loc = '거제도'
	 *         WHERE deptno = 71
	 *******************************************************************/
	public int deptUpdate(DeptVO pdVO) {

		System.out.println("업데이트 호출 성공");
		StringBuilder sql = new StringBuilder();
		sql.append("UPDATE dept      ");
		sql.append("   SET dname = ? ");
		sql.append("      ,loc = ?   ");
		sql.append(" WHERE deptno = ?");

		int result = 0;
		// 예외처리
		try {
			con = dbMgr.getConnection();
			pstmt = con.prepareStatement(sql.toString());
			int i = 1;
			pstmt.setString(i++, pdVO.getDname());
			pstmt.setString(i++, pdVO.getLoc());
			pstmt.setInt(i++, pdVO.getDeptno());
			result = pstmt.executeUpdate();

			if (result == 1) {
				JOptionPane.showMessageDialog(this, "데이터가 수정 되었습니다.", "INFO", JOptionPane.INFORMATION_MESSAGE);
				deptSeleteAll(); // 새로고침 메소드 처리하기. 메소드 재사용성.

			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnectionMgr.freeConnection(pstmt, con);

		}
		return result; // if문의 결과값 출력.
	}

	/*******************************************************************
	 * 부서 삭제 구현
	 * 
	 * @param deptno(int) - 사용자가 선택한 부서번호
	 * @return int - 1:등록 성공 0: 등록 실패 DELETE FROM dept WHERE deptno = 71
	 *******************************************************************/

	public int deptDelete(int deptno) {
		System.out.println("삭제 호출 성공: " + deptno);
		int result = 0;
		StringBuilder sql = new StringBuilder();
		sql.append("DELETE FROM dept WHERE deptno = ?");

		try {
			con = dbMgr.getConnection();
			pstmt = con.prepareStatement(sql.toString());
			pstmt.setInt(1, deptno);
			result = pstmt.executeUpdate();
			if (result == 1) {
				JOptionPane.showMessageDialog(this, "데이터가 삭제되었습니다", "info", JOptionPane.INFORMATION_MESSAGE);
				deptSelectAll();
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnectionMgr.freeConnection(pstmt, con);
		}

	}

	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub

	}

}
